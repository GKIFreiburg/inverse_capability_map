<!-- In order to start the inverse capapbility sampling you need to start
entire planner -->
<launch>

	<arg name="numberOfDraws" value="20" />
	<arg name="numberOfIterations" value="500" />
	<arg name="deviation_x" value="0.5" />
	<arg name="deviation_y" value="0.5" />
	<arg name="deviation_z" value="0.5" />
	<arg name="deviation_theta" value="0.785" /> <!-- 3.14 / 4 -->
	<!-- if min_percent_of_max = 0 and appy_negative_update = true
			==> samples are spread around table -->
	<arg name="min_percent_of_max" value="0" />
	<!-- if apply_negative_update = false, only best samples are taken -->
	<arg name="apply_negative_update" value="false" />

	<!-- flags needed for taking screenshots of sampling procedure -->
	<!-- Should be both true in general, except when taking screenshots -->
	<arg name="map_checks" value="false"/>
	<arg name="collision_checks" value="false"/>

    <!-- name of polygon without ending -->
    <arg name="poly_name" value="table1" />

    <!-- select group_name: left_arm or right_arm or combined-->
    <arg name="group_name" value="combined" />
    
    <!-- resolution in m (0.1, 0.05, 0.025) -->
    <arg name="r" value="0.1" />
    <!-- theta_resolution (unsigned int) -->
    <arg name="t" value="16" />
    
    <!-- Number of draws -->
    <arg name="num_draws" value="20" />

    <node pkg="inverse_capability_map" type="inverse_capability_sampling_main" name="inverse_capability_sampling_main" output="screen">
		<param name="path_inv_cap" type="string" value="$(find inverse_capability_map_generator)/maps/inv_cap_$(arg poly_name)_pr2_$(arg group_name)_$(arg r)m_$(arg t)t.icpm" />
		<param name="poly_name" type="string" value="$(arg poly_name)" />
		<param name="numberOfDraws" type="int" value="$(arg numberOfDraws)" />
		<param name="numberOfIterations" type="int" value="$(arg numberOfIterations)" />
		<param name="deviation_x" type="double" value="$(arg deviation_x)" />
		<param name="deviation_y" type="double" value="$(arg deviation_y)" />
		<param name="deviation_z" type="double" value="$(arg deviation_z)" />
		<param name="deviation_theta" type="double" value="$(arg deviation_theta)" />
		<param name="min_percent_of_max" type="double" value="$(arg min_percent_of_max)" />
		<param name="apply_negative_update" type="bool" value="$(arg apply_negative_update)" />
		<param name="collision_checks" type="bool" value="$(arg collision_checks)" />
		<param name="map_checks" type="bool" value="$(arg map_checks)" />
    </node>

</launch>
